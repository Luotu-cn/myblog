(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{223:function(v,_,a){"use strict";a.r(_);var t=a(0),i=Object(t.a)({},(function(){var v=this,_=v.$createElement,a=v._self._c||_;return a("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[a("h3",{attrs:{id:"变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量","aria-hidden":"true"}},[v._v("#")]),v._v(" 变量")]),v._v(" "),a("h4",{attrs:{id:"java局部变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java局部变量","aria-hidden":"true"}},[v._v("#")]),v._v(" Java局部变量")]),v._v(" "),a("ul",[a("li",[v._v("局部变量声明在方法、 构造方法或者语句块中;")]),v._v(" "),a("li",[v._v("局部变量在方法、 构造方法、 或者语句块被执行的时候创建,当它们执行完成后,"),a("strong",[v._v("变量将会被销毁")]),v._v(";")]),v._v(" "),a("li",[v._v("访问修饰符不能用于局部变量;")]),v._v(" "),a("li",[v._v("局部变量只在声明它的方法、构造方法或者语句块中可见;")]),v._v(" "),a("li",[v._v("局部变量是在栈上分配的。")]),v._v(" "),a("li",[a("strong",[v._v("局部变量没有默认值")]),v._v(",所以局部变量被声明后,"),a("strong",[v._v("必须经过初始化")]),v._v(",才可以使用。")])]),v._v(" "),a("h4",{attrs:{id:"实例变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例变量","aria-hidden":"true"}},[v._v("#")]),v._v(" 实例变量")]),v._v(" "),a("ul",[a("li",[v._v("实例变量声明在一个类中,但在方法、构造方法和语句块之外;")]),v._v(" "),a("li",[v._v("当一个对象被"),a("strong",[v._v("实例化之后")]),v._v(",每个"),a("strong",[v._v("实例变量的值就跟着确定")]),v._v(";")]),v._v(" "),a("li",[a("strong",[v._v("实例变量在对象创建的时候创建,在对象被销毁的时候销毁")]),v._v(";")]),v._v(" "),a("li",[v._v("实例变量的值应该至少被一个方法、构造方法或者语句块引用,使得外部能够通过这些方式获取实例变量信息;")]),v._v(" "),a("li",[v._v("实例变量可以声明在使用前或者使用后;")]),v._v(" "),a("li",[v._v("访问修饰符可以修饰实例变量;")]),v._v(" "),a("li",[v._v("实例变量对于类中的方法、构造方法或者语句块是可见的。一般情况下应该把实例变量设为私有。通过使用访问修饰符可以使实例变量对子类可见;")]),v._v(" "),a("li",[v._v("实例变量具有默认值。数值型变量的默认值是0,布尔型变量的默认值是false,引用类型变量的默认值是null。")]),v._v(" "),a("li",[v._v("变量的值可以在声明时指定,也可以在构造方法中指定;")]),v._v(" "),a("li",[v._v("实例变量可以"),a("strong",[v._v("直接通过变量名访问")]),v._v("。 但在"),a("strong",[v._v("静态方法以及其他类中")]),v._v(",就应该使用完全限定名:\n"),a("strong",[v._v("ObejectReference.VariableNameo")])])]),v._v(" "),a("h4",{attrs:{id:"类变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类变量","aria-hidden":"true"}},[v._v("#")]),v._v(" 类变量")]),v._v(" "),a("ul",[a("li",[v._v("类变量也称为静态变量,在类中以static关键字声明,但必须在方法、构造方法和语句块之外。")]),v._v(" "),a("li",[v._v("无论一个类创建了多少个对象,类只拥有类变量的一份拷贝。静态变量除了被声明为常量外很少使用。常量是指声明为public/private,final和static类型的变量。常量初始化后不可改变。"),a("strong",[v._v("静态变量储存在静态存储区")]),v._v("。经常被声明为常量,很少单独使用static声明变量。"),a("strong",[v._v("静态变量在程序开始时创建,在程序结束时销毁")]),v._v("。")]),v._v(" "),a("li",[v._v("与实例变量具有相似的可见性。但为了对类的使用者可见,大多数静态变量声明为public类型.")]),v._v(" "),a("li",[v._v("默认值和实例变量相似。数值型变量默认值是0,布尔型默认值是false,引用类型默认值是null。变量的值可以在声明的时候指定,也可以在构造方法中指定。此外,"),a("strong",[v._v("静态变量还可以在静态语句块中初始化")]),v._v("。")]),v._v(" "),a("li",[v._v("静态变量可以通过:\nClassName.VariableName的方式访问。")]),v._v(" "),a("li",[v._v("类变量被声明为public static fina类型时，类变量名称"),a("strong",[v._v("必须使用大写字母")]),v._v("。如果静态变量不是pulic和final类型，其命名方式与实例变量以及局部变量的命名方式一致。")])]),v._v(" "),a("h4",{attrs:{id:"静态变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态变量","aria-hidden":"true"}},[v._v("#")]),v._v(" 静态变量")]),v._v(" "),a("p",[v._v("static关键字用来声明独立于对象的静态变量，无论一个类实例化多少对象，它的"),a("strong",[v._v("静态变量只有一份拷贝")]),v._v("。静态变量也被称为类变量。"),a("strong",[v._v("局部变量不能被声明为static变量")]),v._v("。")]),v._v(" "),a("h4",{attrs:{id:"final变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#final变量","aria-hidden":"true"}},[v._v("#")]),v._v(" final变量")]),v._v(" "),a("p",[v._v("final变量能被显式地初始化并且"),a("strong",[v._v("只能初始化一次")]),v._v("。被声明为final的对象的"),a("strong",[v._v("引用不能指向不同的对象")]),v._v("。但是final对象里的数据可以被改变。也就是说"),a("strong",[v._v("final对象的引用不能改变，但是里面的值可以改变")]),v._v("。\nfinal修饰符通常和static修饰符一起使用来创建类常量。")])])}),[],!1,null,null,null);_.default=i.exports}}]);